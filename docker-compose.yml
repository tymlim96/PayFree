version: "3.9"

networks:
  web:
    external: false

volumes:
  pgdata:
  certs: {}

services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # HTTP -> HTTPS redirect
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      # Let's Encrypt (HTTP-01)
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.email=tymlim96@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [web]

  db:
    image: postgres:16-alpine
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [web]
    # no public ports; internal only

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file: .env
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: db
      SALT_ROUNDS: 10
      MIN_PASSWORD_LEN: 6
      RESET_TOKEN_EXPIRES_MIN: 60
      FRONTEND_URL: https://payfree.live
      OAUTH_REDIRECT_URI: https://api.payfree.live/auth/google/callback
    depends_on:
      db:
        condition: service_healthy
    networks: [web]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.payfree.live`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        REACT_APP_API_BASE: https://api.payfree.live
    networks: [web]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`payfree.live`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=le"
      - "traefik.http.services.front.loadbalancer.server.port=80"
